{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","App.js","index.js"],"names":["Navbar","className","href","style","color","backgroundColor","borderRadius","BlogList","blogs","title","map","blog","author","id","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","fetch","then","res","ok","Error","json","console","log","catch","err","message","Home","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAgBeA,G,MAhBA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,6CACA,sBAAKA,UAAU,QAAf,UACI,mBAAGC,KAAK,IAAR,kBACA,mBAAGA,KAAK,UAAUC,MAAO,CACrBC,MAAO,QACPC,gBAAiB,UACjBC,aAAc,OAHlB,8BCSDC,EAfE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACvB,OACI,sBAAKR,UAAU,YAAf,UACI,6BAAMQ,IACLD,EAAME,KAAI,SAACC,GAAD,OACP,sBAAKV,UAAU,eAAf,UACI,6BAAMU,EAAKF,QACX,4CAAgBE,EAAKC,YAFUD,EAAKE,W,OC4BzCC,EA9BE,SAACC,GAAS,IAAD,EAEEC,mBAAS,MAFX,mBAEfC,EAFe,KAETC,EAFS,OAGYF,oBAAS,GAHrB,mBAGfG,EAHe,KAGJC,EAHI,OAIIJ,mBAAS,MAJb,mBAIfK,EAJe,KAIRC,EAJQ,KA2BtB,OArBAC,qBAAU,WACNC,MAAMT,GACDU,MAAK,SAAAC,GACF,IAAIA,EAAIC,GACJ,MAAMC,MAAM,8CAEhB,OAAOF,EAAIG,UAEdJ,MAAK,SAAAR,GACFa,QAAQC,IAAId,GACZC,EAAQD,GACRG,GAAa,GACbE,EAAS,SAEZU,OAAM,SAAAC,GACHb,GAAa,GACbE,EAASW,EAAIC,cAGtB,CAACnB,IAEG,CAAEE,OAAME,YAAWE,UCcfc,EAxCF,WAAO,IAAD,EAE2BrB,EAAS,+BAArCN,EAFC,EAEPS,KAAaE,EAFN,EAEMA,UAAWE,EAFjB,EAEiBA,MA2BhC,OACI,sBAAKpB,UAAU,OAAf,UACKoB,GAAS,oCAAQA,EAAR,OACTF,GAAa,+CACbX,GAAS,cAAC,EAAD,CAAUA,MAASA,EAAOC,MAAQ,mBCjBzC2B,MAjBf,WAOE,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,UCTRoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ad0d21ab.chunk.js","sourcesContent":["const Navbar = () => {\n    return (\n        <nav className=\"navbar\">\n            <h1>Ryan's Blog</h1>\n            <div className=\"links\">\n                <a href=\"/\">Home</a>\n                <a href=\"/create\" style={{\n                    color: 'white',\n                    backgroundColor: '#f1356d',\n                    borderRadius: '8px'\n                }}>New Blog</a>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","const BlogList = ({ blogs, title }) => {\n    return (\n        <div className=\"blog-list\">\n            <h2>{ title }</h2>\n            {blogs.map((blog) => (\n                <div className=\"blog-preview\" key={blog.id}>\n                    <h2>{ blog.title }</h2>\n                    <p>Written by { blog.author }</p>\n                    {/* <button onClick={() => handleDelete(blog.id)}>delete blog</button> */}\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default BlogList;","import { useState, useEffect } from 'react';\n\n// you can add url endpoint so we can use it in different components'\nconst useFetch = (url) => {\n\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch(url)\n            .then(res => {\n                if(!res.ok) {\n                    throw Error('could not fetch the data for that resource')\n                }\n                return res.json();\n            })\n            .then(data => {\n                console.log(data);\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch(err => {\n                setIsPending(false);\n                setError(err.message);\n            })\n            // whenever url gets changed, useEffect function will be ran'\n    }, [url]);\n\n    return { data, isPending, error }\n}\n\nexport default useFetch;","import { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\nimport useFetch from './useFetch';\n\nconst Home = () => {\n\n    const { data: blogs, isPending, error } = useFetch('http://localhost:8000/blogs');\n\n    // const [blogs, setBlogs] = useState(null);\n    // const [isPending, setIsPending] = useState(true);\n    // const [error, setError] = useState(null);\n\n    // useEffect(() => {\n    //     fetch('http://localhost:8000/blogs')\n    //         .then(res => {\n    //             if(!res.ok) {\n    //                 throw Error('could not fetch the data for that resource')\n    //             }\n    //             return res.json();\n    //         })\n    //         .then(data => {\n    //             console.log(data);\n    //             setBlogs(data);\n    //             setIsPending(false);\n    //             setError(null);\n    //         })\n    //         .catch(err => {\n    //             setIsPending(false);\n    //             setError(err.message);\n    //         })\n    //         // whenever url gets changed, useEffect function will be ran'\n    // }, []);\n\n    return (\n        <div className=\"home\">\n            {error && <div> { error } </div>}\n            {isPending && <div> Loading... </div>}\n            {blogs && <BlogList blogs = {blogs} title = 'All Blogs!' />}\n            {/* <button onClick={() => setName('luigi')}>change name></button>\n            <p>{name}</p> */}\n        </div>\n    );\n}\n\nexport default Home;","import Navbar from './Navbar';\nimport Home from './Home';\n\nfunction App() {\n  // we can output numbers, strings, and arrays but not object\n\n  // const title = 'Welcome to the new blog';\n  // const likes = 50;\n  // const link = 'http://www.google.com';\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"content\">\n        <Home />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}